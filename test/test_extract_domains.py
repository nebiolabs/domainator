import io
from domainator.Bio import SeqIO
from domainator import extract_domains
import tempfile
from domainator.utils import parse_seqfiles

def test_extract_domains_1(shared_datadir):
    """
        Test read and write genbank files.
    """
    with tempfile.TemporaryDirectory() as output_dir:
        out = output_dir + "/domains.gb"
        extract_domains.main(['-i', str(shared_datadir) + "/" + "pDONR201_multi_genemark_domainator.gb", "--domains", "CcdB", "--o", out])
        out_recs = list(parse_seqfiles([out]))
        assert len(out_recs) == 4
        for rec in out_recs:
            assert str(rec.seq) == "CAGTTTAAGGTTTACACCTATAAAAGAGAGAGCCGTTATCGTCTGTTTGTGGATGTACAGAGTGATATTATTGACACGCCCGGGCGACGGATGGTGATCCCCCTGGCCAGTGCACGTCTGCTGTCAGATAAAGTCTCCCGTGAACTTTACCCGGTGGTGCATATCGGGGATGAAAGCTGGCGCATGATGACCACCGATATGGCCAGTGTGCCGGTCTCCGTTATCGGGGAAGAAGTGGCTGATCTCAGCCACCGCGAAAATGACATCAAAAACGCCATTAACCTGATGTTCTGGGGA"

def test_extract_domains_fasta_out_1(shared_datadir):
    """
        Test read and write genbank files.
    """
    with tempfile.TemporaryDirectory() as output_dir:
        #output_dir = "test_out"
        out = output_dir + "/domains.fasta"
        extract_domains.main(['-i', str(shared_datadir) + "/" + "pDONR201_multi_genemark_domainator.gb", "--domains", "CcdB", "--fasta_out", "-o", out])
        out_recs = list(parse_seqfiles([out]))
        assert len(out_recs) == 4
        for rec in out_recs:
            assert str(rec.seq) == "CAGTTTAAGGTTTACACCTATAAAAGAGAGAGCCGTTATCGTCTGTTTGTGGATGTACAGAGTGATATTATTGACACGCCCGGGCGACGGATGGTGATCCCCCTGGCCAGTGCACGTCTGCTGTCAGATAAAGTCTCCCGTGAACTTTACCCGGTGGTGCATATCGGGGATGAAAGCTGGCGCATGATGACCACCGATATGGCCAGTGTGCCGGTCTCCGTTATCGGGGAAGAAGTGGCTGATCTCAGCCACCGCGAAAATGACATCAAAAACGCCATTAACCTGATGTTCTGGGGA"

def test_extract_domains_keep_direction_1(shared_datadir, capsys):
    """
        Test read and write genbank files.
    """
    with tempfile.TemporaryDirectory() as output_dir:
        out = output_dir + "/domains.gb"
        extract_domains.main(['-i', str(shared_datadir) + "/" + "pDONR201_multi_genemark_domainator.gb", "--domains", "CcdB", "--keep_direction", "-o", out])
        out_recs = list(parse_seqfiles([out]))
        assert len(out_recs) == 4
        for rec in out_recs:
            assert str(rec.seq) == "TCCCCAGAACATCAGGTTAATGGCGTTTTTGATGTCATTTTCGCGGTGGCTGAGATCAGCCACTTCTTCCCCGATAACGGAGACCGGCACACTGGCCATATCGGTGGTCATCATGCGCCAGCTTTCATCCCCGATATGCACCACCGGGTAAAGTTCACGGGAGACTTTATCTGACAGCAGACGTGCACTGGCCAGGGGGATCACCATCCGTCGCCCGGGCGTGTCAATAATATCACTCTGTACATCCACAAACAGACGATAACGGCTCTCTCTTTTATAGGTGTAAACCTTAAACTG"

def test_extract_domains_padding_1(shared_datadir):
    """
        Test read and write genbank files.
    """
    with tempfile.TemporaryDirectory() as output_dir:
        out = output_dir + "/domains.gb"
        extract_domains.main(['-i', str(shared_datadir) + "/" + "pDONR201_multi_genemark_domainator.gb", "--domains", "CcdB", "--pad_up", "10", "--pad_down", "10", "-o", out])
        out_recs = list(parse_seqfiles([out]))
        assert len(out_recs) == 4
        for rec in out_recs:
            assert str(rec.seq) == "TGGTGAAATGCAGTTTAAGGTTTACACCTATAAAAGAGAGAGCCGTTATCGTCTGTTTGTGGATGTACAGAGTGATATTATTGACACGCCCGGGCGACGGATGGTGATCCCCCTGGCCAGTGCACGTCTGCTGTCAGATAAAGTCTCCCGTGAACTTTACCCGGTGGTGCATATCGGGGATGAAAGCTGGCGCATGATGACCACCGATATGGCCAGTGTGCCGGTCTCCGTTATCGGGGAAGAAGTGGCTGATCTCAGCCACCGCGAAAATGACATCAAAAACGCCATTAACCTGATGTTCTGGGGAATATAAATGT"

def test_extract_domains_contigs_1(shared_datadir):
    """
        Test read and write genbank files.
    """
    with tempfile.TemporaryDirectory() as output_dir:
        out = output_dir + "/domains.gb"
        extract_domains.main(['-i', str(shared_datadir) + "/" + "pDONR201_multi_genemark_domainator.gb", "--domains", "CcdB", "--contigs", "pDONR201_1", "-o", out])
        out_recs = list(parse_seqfiles([out]))
        assert len(out_recs) == 1
        for rec in out_recs:
            assert str(rec.seq) == "CAGTTTAAGGTTTACACCTATAAAAGAGAGAGCCGTTATCGTCTGTTTGTGGATGTACAGAGTGATATTATTGACACGCCCGGGCGACGGATGGTGATCCCCCTGGCCAGTGCACGTCTGCTGTCAGATAAAGTCTCCCGTGAACTTTACCCGGTGGTGCATATCGGGGATGAAAGCTGGCGCATGATGACCACCGATATGGCCAGTGTGCCGGTCTCCGTTATCGGGGAAGAAGTGGCTGATCTCAGCCACCGCGAAAATGACATCAAAAACGCCATTAACCTGATGTTCTGGGGA"

def test_extract_domains_combine_1(shared_datadir, capsys):
    """
        Test read and write genbank files.
    """
    with tempfile.TemporaryDirectory() as output_dir:
        out = output_dir + "/domains.gb"
        extract_domains.main(['-i', str(shared_datadir) + "/" + "pDONR201_multi_genemark_domainator.gb", "--domains", "CcdB", "CcdA", "--pad_up", "10", "--pad_down", "10", "--combine", "-o", out])
        out_recs = list(parse_seqfiles([out]))
        assert len(out_recs) == 4
        for rec in out_recs:
            assert str(rec.seq) == "AAGCACAACCATGCAGAATGAAGCCCGTCGTCTGCGTGCCGAACGCTGGAAAGCGGAAAATCAGGAAGGGATGGCTGAGGTCGCCCGGTTTATTGAAATGAACGGCTCTTTTGCTGACGAGAACAGGGACTGGTGAAATGCAGTTTAAGGTTTACACCTATAAAAGAGAGAGCCGTTATCGTCTGTTTGTGGATGTACAGAGTGATATTATTGACACGCCCGGGCGACGGATGGTGATCCCCCTGGCCAGTGCACGTCTGCTGTCAGATAAAGTCTCCCGTGAACTTTACCCGGTGGTGCATATCGGGGATGAAAGCTGGCGCATGATGACCACCGATATGGCCAGTGTGCCGGTCTCCGTTATCGGGGAAGAAGTGGCTGATCTCAGCCACCGCGAAAATGACATCAAAAACGCCATTAACCTGATGTTCTGGGGAATATAAATGT"

def test_extract_domains_keep_names_1(shared_datadir, capsys):
    """
        Test read and write genbank files.
    """
    with tempfile.TemporaryDirectory() as output_dir:
        out = output_dir + "/domains.gb"
        extract_domains.main(['-i', str(shared_datadir) + "/" + "pDONR201_multi_genemark_domainator.gb", "--domains", "CcdB", "CcdA", "--pad_up", "10", "--pad_down", "10", "--combine", "--keep_name", "-o", out])
        out_recs = list(parse_seqfiles([out]))
        old_recs = list(parse_seqfiles([shared_datadir / "pDONR201_multi_genemark_domainator.gb"]))
        old_names = {rec.name for rec in old_recs}
        new_names = {rec.name for rec in old_recs}
        assert len(out_recs) == 4
        assert len(new_names) == len(old_names) == len(new_names.intersection(old_names)) == 4
        for rec in out_recs:
            assert str(rec.seq) == "AAGCACAACCATGCAGAATGAAGCCCGTCGTCTGCGTGCCGAACGCTGGAAAGCGGAAAATCAGGAAGGGATGGCTGAGGTCGCCCGGTTTATTGAAATGAACGGCTCTTTTGCTGACGAGAACAGGGACTGGTGAAATGCAGTTTAAGGTTTACACCTATAAAAGAGAGAGCCGTTATCGTCTGTTTGTGGATGTACAGAGTGATATTATTGACACGCCCGGGCGACGGATGGTGATCCCCCTGGCCAGTGCACGTCTGCTGTCAGATAAAGTCTCCCGTGAACTTTACCCGGTGGTGCATATCGGGGATGAAAGCTGGCGCATGATGACCACCGATATGGCCAGTGTGCCGGTCTCCGTTATCGGGGAAGAAGTGGCTGATCTCAGCCACCGCGAAAATGACATCAAAAACGCCATTAACCTGATGTTCTGGGGAATATAAATGT"


def test_extract_domains_origin_spanning_domain_1(shared_datadir):
    """
        Test read and write genbank files.
    """
    with tempfile.TemporaryDirectory() as output_dir:
        # output_dir = "test_out"
        out = output_dir + "/domains.gb"
        extract_domains.main(['-i', str(shared_datadir) + "/" + "bacillus_phage_SPR_with_annotations.gb", "--pad_up", "10", "--pad_down", "10", "--domains", "Thymidylat_synt", "--o", out])
        out_recs = list(parse_seqfiles([out]))
        assert len(out_recs) == 1
        for rec in out_recs:
            assert str(rec.seq) == "TCAATTCGATAAACAATACAGTTCAATCATAAATGACATTATAAATAATGGAATCTCAGACGAAGAATTTCAAGTAAGAACAAAGTGGGACTCAGATGGAACACCGGCTCATACACTAAGCGTGATTAGTAAGCAAATGAGATTCGACAACTCAGAGGTTCCGATTTTAACGACAAAAAAAGTTGCCTGGAAAACAGCCATTAAAGAGTTGCTCTGGATTTGGCAGCTGAAATCTAATGATGTTAATGATTTAAACAAGATGGGCGTACATATTTGGGATCAGTGGAAACAAGAAGACGGCACCATCGGACATGCATATGGATTTCAGCTGGGGAAGAAAAACAGAAGTCTAAATGGAGAAAAAGTGGATCAGGTAGACTATCTTCTTCATCAATTGAAGAACAACCCGTCTTCACGCAGACACATTACAATGCTGTGGAATCCTGATGATTTAGACTCAATGGCCTTAACGCCATGTGTATACGAAACTCAATGGTATGTTAAGCAAGGTAAGCTCCACCTCGAGGTAAGAGCACGGAGCAATGATATGGCGTTGGGGAATCCATTCAATGTATTCCAGTACAATGTGTTGCAGCGCATGATTGCTCAAGTGACTGGTTATAAGCTTGGTGAATATATCTTTAACATTGGGGATTGCCATGTGTACACACGTCATATAGACAATTTGAAAATTCAAATGGAAAGAGAACAGTTTGAAGCACCTGAACTATGGATCAATCCTGAAGTGAAAGATTTTTATCATTTTACAATCGATGATTTCAAATTAATCAACTATAAACATGGGGACAAGCTATTATTTGAGGTAGCGGTTTAATGCTATC"

def test_extract_domains_origin_spanning_domain_2(shared_datadir):
    """
        Test read and write genbank files.
    """
    with tempfile.TemporaryDirectory() as output_dir:
        #output_dir = "test_out"
        out = output_dir + "/domains.gb"
        extract_domains.main(['-i', str(shared_datadir) + "/" + "bacillus_phage_SPR_with_annotations.gb", "--pad_up", "10000", "--pad_down", "10000", "--domains", "Thymidylat_synt", "--o", out])
        out_recs = list(parse_seqfiles([out]))
        assert len(out_recs) == 1
        for rec in out_recs:
            assert str(rec.seq) == "ACTACAAAAATCAGGAAAACTGGTCAGAAACGGATTGTAAAAGGGATTGATCAGTTGCCATATACAATTAAAGAAAACATTGCTGATCAAGTGAATGAATTAAAGGGGGAGCTTTTTGGATGAAAGCAAATATTAATGGTATTGAATTTGAGGGTACGCCCGAAGAAATAAACGAATTGATTAATTTACATGGATATAAGAATATGCTGCAAGATGATTTATTAATGAGGAACTTTGAACAGCTTAGCCGAGTGAATAGATCAAGACCGACTAATTTATTTAAAGTAGGGGATTATGATTTCCATGACTCGCCTAAATGCTTAATTATCACTTGATTAGAGTAGTAATAAATCAAAAGACAAATATAAAATAAGGAGATGTTTATTATAGCGTATCTAACTTTATTTCTAGCAGCTTATCTAATTGCATTAAACATTAATGAGGTCAGATTGATTATTCGAGGAGAAAGTGATACATATAGAAAAGTAAAGAGTGTGCTCGATAATTCAACTATTGAAAACGTGAAACGAAATAAGAATTTGATTTACCTGTTTACTTTGCTCAAGGGAATATCTTTCATTGTCCCTCTGGCTTATATTGGATTAGTTATGCACGATAACATCCTAATGCTTGCGTGGACAGCAGTTTCACTTATTTATGTTGTCCTTAGAATGTTCAAAGTTTTAGATGCATTAGAAGGTGAAAGAATCAAGCAAAACACATATTTTTACTTGTTATTTGTTTGTGGGAATTTTCTTTTTGTTGTATTTTATTTGGCAGATATATTCGTATAAAATATTTAATTAATGCTTTGCTTTTTCAAATACTATTTCCAAAAGGACTGAGAATCATGACTCAATTCGATAAACAATACAGTTCAATCATAAATGACATTATAAATAATGGAATCTCAGACGAAGAATTTCAAGTAAGAACAAAGTGGGACTCAGATGGAACACCGGCTCATACACTAAGCGTGATTAGTAAGCAAATGAGATTCGACAACTCAGAGGTTCCGATTTTAACGACAAAAAAAGTTGCCTGGAAAACAGCCATTAAAGAGTTGCTCTGGATTTGGCAGCTGAAATCTAATGATGTTAATGATTTAAACAAGATGGGCGTACATATTTGGGATCAGTGGAAACAAGAAGACGGCACCATCGGACATGCATATGGATTTCAGCTGGGGAAGAAAAACAGAAGTCTAAATGGAGAAAAAGTGGATCAGGTAGACTATCTTCTTCATCAATTGAAGAACAACCCGTCTTCACGCAGACACATTACAATGCTGTGGAATCCTGATGATTTAGACTCAATGGCCTTAACGCCATGTGTATACGAAACTCAATGGTATGTTAAGCAAGGTAAGCTCCACCTCGAGGTAAGAGCACGGAGCAATGATATGGCGTTGGGGAATCCATTCAATGTATTCCAGTACAATGTGTTGCAGCGCATGATTGCTCAAGTGACTGGTTATAAGCTTGGTGAATATATCTTTAACATTGGGGATTGCCATGTGTACACACGTCATATAGACAATTTGAAAATTCAAATGGAAAGAGAACAGTTTGAAGCACCTGAACTATGGATCAATCCTGAAGTGAAAGATTTTTATCATTTTACAATCGATGATTTCAAATTAATCAACTATAAACATGGGGACAAGCTATTATTTGAGGTAGCGGTTTAATGCTATCTCTTATTGCTTGCTGTGATAAAACTCTGGCCATTGGACATCAAAACAAATTACTGTATCATGTGCCTGCTGACATGAAACATTTCAAAGAAAAAACTGAGGGGAAAATATGTATTCAAGGAAGATCAACATACGAATCAATTATCGGTATGACAGGTAAGCCTCTACAGAATAGAAGGAATATTATACTTACTAGGGATCAGAACTTTAAGCCAGATTATTCATCCTTTGTGTATCATTCAATTGAGGAGGTCTTAAAGCTCATTCAAGGTCAAGTTAACACTGATGAGGAAGTGATGGTGATAGGGGGAAGTATGATTTACAAAGCATTCTTGCCCTACGCTGATAAAGTGTATTTGACAATTGTTGATTCAGAGTCAAATGAAGCAGATTCATATTTCCCAATGTTAGATGATCATTGGAAAGTGACTAATAAACAACATAATGAAGCCGATGAAAAGAACAAATACAATTATTCCTTCCTAACTTTTGAAAATAAATATAGACAAAAATAAAAAATATGTATAATATAATAACAAGAGGTTGATGAAATAGCAGTTTTTTATTTAAAATACATTGAACATATGAGACAAGTCGCTGAGTACGAGAAAGACCTGAGATACAAAAGTGCAGCAACTAATTTCTTAAAGATGATCGACCATAATTAAAATACGCGGGTGATTAATTGTTAAAGGATAAAAATAAATTATTAAAGAGTATTGAAAAGATCAACAAACTTGAAGAAGGGTTGTCACTATTTGAAGAAGGTGACGAAGAATATTTAAGTGTATTAGTGAAAATTCAGGGGCTATATGATGAAATCTCAGATACTGCTTTAGAGTGTTTTAAAGAGATG"

def test_extract_domains_origin_spanning_domain_3(shared_datadir):
    """
        Test read and write genbank files.
    """
    with tempfile.TemporaryDirectory() as output_dir:
        # output_dir = "test_out"
        out = output_dir + "/domains.gb"
        extract_domains.main(['-i', str(shared_datadir) + "/" + "bacillus_phage_SPR_with_annotations_reversed.gb", "--pad_up", "10000", "--pad_down", "10000", "--domains", "Thymidylat_synt", "--o", out])
        out_recs = list(parse_seqfiles([out]))
        assert len(out_recs) == 1
        for rec in out_recs:
            assert str(rec.seq) == "ACTACAAAAATCAGGAAAACTGGTCAGAAACGGATTGTAAAAGGGATTGATCAGTTGCCATATACAATTAAAGAAAACATTGCTGATCAAGTGAATGAATTAAAGGGGGAGCTTTTTGGATGAAAGCAAATATTAATGGTATTGAATTTGAGGGTACGCCCGAAGAAATAAACGAATTGATTAATTTACATGGATATAAGAATATGCTGCAAGATGATTTATTAATGAGGAACTTTGAACAGCTTAGCCGAGTGAATAGATCAAGACCGACTAATTTATTTAAAGTAGGGGATTATGATTTCCATGACTCGCCTAAATGCTTAATTATCACTTGATTAGAGTAGTAATAAATCAAAAGACAAATATAAAATAAGGAGATGTTTATTATAGCGTATCTAACTTTATTTCTAGCAGCTTATCTAATTGCATTAAACATTAATGAGGTCAGATTGATTATTCGAGGAGAAAGTGATACATATAGAAAAGTAAAGAGTGTGCTCGATAATTCAACTATTGAAAACGTGAAACGAAATAAGAATTTGATTTACCTGTTTACTTTGCTCAAGGGAATATCTTTCATTGTCCCTCTGGCTTATATTGGATTAGTTATGCACGATAACATCCTAATGCTTGCGTGGACAGCAGTTTCACTTATTTATGTTGTCCTTAGAATGTTCAAAGTTTTAGATGCATTAGAAGGTGAAAGAATCAAGCAAAACACATATTTTTACTTGTTATTTGTTTGTGGGAATTTTCTTTTTGTTGTATTTTATTTGGCAGATATATTCGTATAAAATATTTAATTAATGCTTTGCTTTTTCAAATACTATTTCCAAAAGGACTGAGAATCATGACTCAATTCGATAAACAATACAGTTCAATCATAAATGACATTATAAATAATGGAATCTCAGACGAAGAATTTCAAGTAAGAACAAAGTGGGACTCAGATGGAACACCGGCTCATACACTAAGCGTGATTAGTAAGCAAATGAGATTCGACAACTCAGAGGTTCCGATTTTAACGACAAAAAAAGTTGCCTGGAAAACAGCCATTAAAGAGTTGCTCTGGATTTGGCAGCTGAAATCTAATGATGTTAATGATTTAAACAAGATGGGCGTACATATTTGGGATCAGTGGAAACAAGAAGACGGCACCATCGGACATGCATATGGATTTCAGCTGGGGAAGAAAAACAGAAGTCTAAATGGAGAAAAAGTGGATCAGGTAGACTATCTTCTTCATCAATTGAAGAACAACCCGTCTTCACGCAGACACATTACAATGCTGTGGAATCCTGATGATTTAGACTCAATGGCCTTAACGCCATGTGTATACGAAACTCAATGGTATGTTAAGCAAGGTAAGCTCCACCTCGAGGTAAGAGCACGGAGCAATGATATGGCGTTGGGGAATCCATTCAATGTATTCCAGTACAATGTGTTGCAGCGCATGATTGCTCAAGTGACTGGTTATAAGCTTGGTGAATATATCTTTAACATTGGGGATTGCCATGTGTACACACGTCATATAGACAATTTGAAAATTCAAATGGAAAGAGAACAGTTTGAAGCACCTGAACTATGGATCAATCCTGAAGTGAAAGATTTTTATCATTTTACAATCGATGATTTCAAATTAATCAACTATAAACATGGGGACAAGCTATTATTTGAGGTAGCGGTTTAATGCTATCTCTTATTGCTTGCTGTGATAAAACTCTGGCCATTGGACATCAAAACAAATTACTGTATCATGTGCCTGCTGACATGAAACATTTCAAAGAAAAAACTGAGGGGAAAATATGTATTCAAGGAAGATCAACATACGAATCAATTATCGGTATGACAGGTAAGCCTCTACAGAATAGAAGGAATATTATACTTACTAGGGATCAGAACTTTAAGCCAGATTATTCATCCTTTGTGTATCATTCAATTGAGGAGGTCTTAAAGCTCATTCAAGGTCAAGTTAACACTGATGAGGAAGTGATGGTGATAGGGGGAAGTATGATTTACAAAGCATTCTTGCCCTACGCTGATAAAGTGTATTTGACAATTGTTGATTCAGAGTCAAATGAAGCAGATTCATATTTCCCAATGTTAGATGATCATTGGAAAGTGACTAATAAACAACATAATGAAGCCGATGAAAAGAACAAATACAATTATTCCTTCCTAACTTTTGAAAATAAATATAGACAAAAATAAAAAATATGTATAATATAATAACAAGAGGTTGATGAAATAGCAGTTTTTTATTTAAAATACATTGAACATATGAGACAAGTCGCTGAGTACGAGAAAGACCTGAGATACAAAAGTGCAGCAACTAATTTCTTAAAGATGATCGACCATAATTAAAATACGCGGGTGATTAATTGTTAAAGGATAAAAATAAATTATTAAAGAGTATTGAAAAGATCAACAAACTTGAAGAAGGGTTGTCACTATTTGAAGAAGGTGACGAAGAATATTTAAGTGTATTAGTGAAAATTCAGGGGCTATATGATGAAATCTCAGATACTGCTTTAGAGTGTTTTAAAGAGATG"


def test_extract_domains_origin_non_spanning_domain_1(shared_datadir):
    """
        Test read and write genbank files.
    """
    with tempfile.TemporaryDirectory() as output_dir:
        # output_dir = "test_out"
        out = output_dir + "/domains.gb"
        extract_domains.main(['-i', str(shared_datadir) + "/" + "bacillus_phage_SPR_with_annotations.gb", "--pad_up", "10000", "--pad_down", "10000", "--domains", "DHFR_1", "--o", out])
        out_recs = list(parse_seqfiles([out]))
        assert len(out_recs) == 1
        for rec in out_recs:
            assert str(rec.seq) == "CTTAGAATGTTCAAAGTTTTAGATGCATTAGAAGGTGAAAGAATCAAGCAAAACACATATTTTTACTTGTTATTTGTTTGTGGGAATTTTCTTTTTGTTGTATTTTATTTGGCAGATATATTCGTATAAAATATTTAATTAATGCTTTGCTTTTTCAAATACTATTTCCAAAAGGACTGAGAATCATGACTCAATTCGATAAACAATACAGTTCAATCATAAATGACATTATAAATAATGGAATCTCAGACGAAGAATTTCAAGTAAGAACAAAGTGGGACTCAGATGGAACACCGGCTCATACACTAAGCGTGATTAGTAAGCAAATGAGATTCGACAACTCAGAGGTTCCGATTTTAACGACAAAAAAAGTTGCCTGGAAAACAGCCATTAAAGAGTTGCTCTGGATTTGGCAGCTGAAATCTAATGATGTTAATGATTTAAACAAGATGGGCGTACATATTTGGGATCAGTGGAAACAAGAAGACGGCACCATCGGACATGCATATGGATTTCAGCTGGGGAAGAAAAACAGAAGTCTAAATGGAGAAAAAGTGGATCAGGTAGACTATCTTCTTCATCAATTGAAGAACAACCCGTCTTCACGCAGACACATTACAATGCTGTGGAATCCTGATGATTTAGACTCAATGGCCTTAACGCCATGTGTATACGAAACTCAATGGTATGTTAAGCAAGGTAAGCTCCACCTCGAGGTAAGAGCACGGAGCAATGATATGGCGTTGGGGAATCCATTCAATGTATTCCAGTACAATGTGTTGCAGCGCATGATTGCTCAAGTGACTGGTTATAAGCTTGGTGAATATATCTTTAACATTGGGGATTGCCATGTGTACACACGTCATATAGACAATTTGAAAATTCAAATGGAAAGAGAACAGTTTGAAGCACCTGAACTATGGATCAATCCTGAAGTGAAAGATTTTTATCATTTTACAATCGATGATTTCAAATTAATCAACTATAAACATGGGGACAAGCTATTATTTGAGGTAGCGGTTTAATGCTATCTCTTATTGCTTGCTGTGATAAAACTCTGGCCATTGGACATCAAAACAAATTACTGTATCATGTGCCTGCTGACATGAAACATTTCAAAGAAAAAACTGAGGGGAAAATATGTATTCAAGGAAGATCAACATACGAATCAATTATCGGTATGACAGGTAAGCCTCTACAGAATAGAAGGAATATTATACTTACTAGGGATCAGAACTTTAAGCCAGATTATTCATCCTTTGTGTATCATTCAATTGAGGAGGTCTTAAAGCTCATTCAAGGTCAAGTTAACACTGATGAGGAAGTGATGGTGATAGGGGGAAGTATGATTTACAAAGCATTCTTGCCCTACGCTGATAAAGTGTATTTGACAATTGTTGATTCAGAGTCAAATGAAGCAGATTCATATTTCCCAATGTTAGATGATCATTGGAAAGTGACTAATAAACAACATAATGAAGCCGATGAAAAGAACAAATACAATTATTCCTTCCTAACTTTTGAAAATAAATATAGACAAAAATAAAAAATATGTATAATATAATAACAAGAGGTTGATGAAATAGCAGTTTTTTATTTAAAATACATTGAACATATGAGACAAGTCGCTGAGTACGAGAAAGACCTGAGATACAAAAGTGCAGCAACTAATTTCTTAAAGATGATCGACCATAATTAAAATACGCGGGTGATTAATTGTTAAAGGATAAAAATAAATTATTAAAGAGTATTGAAAAGATCAACAAACTTGAAGAAGGGTTGTCACTATTTGAAGAAGGTGACGAAGAATATTTAAGTGTATTAGTGAAAATTCAGGGGCTATATGATGAAATCTCAGATACTGCTTTAGAGTGTTTTAAAGAGATGACTACAAAAATCAGGAAAACTGGTCAGAAACGGATTGTAAAAGGGATTGATCAGTTGCCATATACAATTAAAGAAAACATTGCTGATCAAGTGAATGAATTAAAGGGGGAGCTTTTTGGATGAAAGCAAATATTAATGGTATTGAATTTGAGGGTACGCCCGAAGAAATAAACGAATTGATTAATTTACATGGATATAAGAATATGCTGCAAGATGATTTATTAATGAGGAACTTTGAACAGCTTAGCCGAGTGAATAGATCAAGACCGACTAATTTATTTAAAGTAGGGGATTATGATTTCCATGACTCGCCTAAATGCTTAATTATCACTTGATTAGAGTAGTAATAAATCAAAAGACAAATATAAAATAAGGAGATGTTTATTATAGCGTATCTAACTTTATTTCTAGCAGCTTATCTAATTGCATTAAACATTAATGAGGTCAGATTGATTATTCGAGGAGAAAGTGATACATATAGAAAAGTAAAGAGTGTGCTCGATAATTCAACTATTGAAAACGTGAAACGAAATAAGAATTTGATTTACCTGTTTACTTTGCTCAAGGGAATATCTTTCATTGTCCCTCTGGCTTATATTGGATTAGTTATGCACGATAACATCCTAATGCTTGCGTGGACAGCAGTTTCACTTATTTATGTTGTC"

def test_extract_domains_origin_non_spanning_domain_2(shared_datadir):
    """
        Test read and write genbank files.
    """
    with tempfile.TemporaryDirectory() as output_dir:
        # output_dir = "test_out"
        out = output_dir + "/domains.gb"
        extract_domains.main(['-i', str(shared_datadir) + "/" + "bacillus_phage_SPR_with_annotations_reversed.gb", "--pad_up", "10000", "--pad_down", "10000", "--domains", "DHFR_1", "--o", out])
        out_recs = list(parse_seqfiles([out]))
        assert len(out_recs) == 1
        for rec in out_recs:
            assert str(rec.seq) == "CTTAGAATGTTCAAAGTTTTAGATGCATTAGAAGGTGAAAGAATCAAGCAAAACACATATTTTTACTTGTTATTTGTTTGTGGGAATTTTCTTTTTGTTGTATTTTATTTGGCAGATATATTCGTATAAAATATTTAATTAATGCTTTGCTTTTTCAAATACTATTTCCAAAAGGACTGAGAATCATGACTCAATTCGATAAACAATACAGTTCAATCATAAATGACATTATAAATAATGGAATCTCAGACGAAGAATTTCAAGTAAGAACAAAGTGGGACTCAGATGGAACACCGGCTCATACACTAAGCGTGATTAGTAAGCAAATGAGATTCGACAACTCAGAGGTTCCGATTTTAACGACAAAAAAAGTTGCCTGGAAAACAGCCATTAAAGAGTTGCTCTGGATTTGGCAGCTGAAATCTAATGATGTTAATGATTTAAACAAGATGGGCGTACATATTTGGGATCAGTGGAAACAAGAAGACGGCACCATCGGACATGCATATGGATTTCAGCTGGGGAAGAAAAACAGAAGTCTAAATGGAGAAAAAGTGGATCAGGTAGACTATCTTCTTCATCAATTGAAGAACAACCCGTCTTCACGCAGACACATTACAATGCTGTGGAATCCTGATGATTTAGACTCAATGGCCTTAACGCCATGTGTATACGAAACTCAATGGTATGTTAAGCAAGGTAAGCTCCACCTCGAGGTAAGAGCACGGAGCAATGATATGGCGTTGGGGAATCCATTCAATGTATTCCAGTACAATGTGTTGCAGCGCATGATTGCTCAAGTGACTGGTTATAAGCTTGGTGAATATATCTTTAACATTGGGGATTGCCATGTGTACACACGTCATATAGACAATTTGAAAATTCAAATGGAAAGAGAACAGTTTGAAGCACCTGAACTATGGATCAATCCTGAAGTGAAAGATTTTTATCATTTTACAATCGATGATTTCAAATTAATCAACTATAAACATGGGGACAAGCTATTATTTGAGGTAGCGGTTTAATGCTATCTCTTATTGCTTGCTGTGATAAAACTCTGGCCATTGGACATCAAAACAAATTACTGTATCATGTGCCTGCTGACATGAAACATTTCAAAGAAAAAACTGAGGGGAAAATATGTATTCAAGGAAGATCAACATACGAATCAATTATCGGTATGACAGGTAAGCCTCTACAGAATAGAAGGAATATTATACTTACTAGGGATCAGAACTTTAAGCCAGATTATTCATCCTTTGTGTATCATTCAATTGAGGAGGTCTTAAAGCTCATTCAAGGTCAAGTTAACACTGATGAGGAAGTGATGGTGATAGGGGGAAGTATGATTTACAAAGCATTCTTGCCCTACGCTGATAAAGTGTATTTGACAATTGTTGATTCAGAGTCAAATGAAGCAGATTCATATTTCCCAATGTTAGATGATCATTGGAAAGTGACTAATAAACAACATAATGAAGCCGATGAAAAGAACAAATACAATTATTCCTTCCTAACTTTTGAAAATAAATATAGACAAAAATAAAAAATATGTATAATATAATAACAAGAGGTTGATGAAATAGCAGTTTTTTATTTAAAATACATTGAACATATGAGACAAGTCGCTGAGTACGAGAAAGACCTGAGATACAAAAGTGCAGCAACTAATTTCTTAAAGATGATCGACCATAATTAAAATACGCGGGTGATTAATTGTTAAAGGATAAAAATAAATTATTAAAGAGTATTGAAAAGATCAACAAACTTGAAGAAGGGTTGTCACTATTTGAAGAAGGTGACGAAGAATATTTAAGTGTATTAGTGAAAATTCAGGGGCTATATGATGAAATCTCAGATACTGCTTTAGAGTGTTTTAAAGAGATGACTACAAAAATCAGGAAAACTGGTCAGAAACGGATTGTAAAAGGGATTGATCAGTTGCCATATACAATTAAAGAAAACATTGCTGATCAAGTGAATGAATTAAAGGGGGAGCTTTTTGGATGAAAGCAAATATTAATGGTATTGAATTTGAGGGTACGCCCGAAGAAATAAACGAATTGATTAATTTACATGGATATAAGAATATGCTGCAAGATGATTTATTAATGAGGAACTTTGAACAGCTTAGCCGAGTGAATAGATCAAGACCGACTAATTTATTTAAAGTAGGGGATTATGATTTCCATGACTCGCCTAAATGCTTAATTATCACTTGATTAGAGTAGTAATAAATCAAAAGACAAATATAAAATAAGGAGATGTTTATTATAGCGTATCTAACTTTATTTCTAGCAGCTTATCTAATTGCATTAAACATTAATGAGGTCAGATTGATTATTCGAGGAGAAAGTGATACATATAGAAAAGTAAAGAGTGTGCTCGATAATTCAACTATTGAAAACGTGAAACGAAATAAGAATTTGATTTACCTGTTTACTTTGCTCAAGGGAATATCTTTCATTGTCCCTCTGGCTTATATTGGATTAGTTATGCACGATAACATCCTAATGCTTGCGTGGACAGCAGTTTCACTTATTTATGTTGTC"


def test_domain_search_hit_1(shared_datadir):
    with tempfile.TemporaryDirectory() as output_dir:
        #output_dir = "test_out"
        out = output_dir + "/extraction.gb"
        extract_domains.main(["-i", str(shared_datadir / "pDONR_201_domain_search.gb"), "-o", out, "--search_hits"])
        new_file = list(SeqIO.parse(out, "genbank"))
        assert len(new_file) == 1
        assert len(new_file[0]) == 123
        new_file[0].name = "pDONR201_1"
        
#TODO: test naming

def test_domain_database_1(shared_datadir):
    with tempfile.TemporaryDirectory() as output_dir:
        # output_dir = "test_out"
        out = output_dir + "/extraction.gb"
        extract_domains.main(["-i", str(shared_datadir / "pDONR201_multi_genemark_domainator_multi_hmm_2.gb"), "-o", out, "--database", "pdonr_hmms_1", "--domains", "APH", "CcdB"])
        new_file = list(SeqIO.parse(out, "genbank"))
        assert len(new_file) == 4
        assert len(new_file[0]) == 297
        assert len(new_file[1]) == 297
        assert len(new_file[2]) == 699
        assert len(new_file[3]) == 699
        new_file[0].name = "pDONR201_1"
